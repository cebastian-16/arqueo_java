import * as XLSX from "xlsx";
// eslint-disable-next-line react/prop-types
export const BottonExportItems = ({ datos }) => {
  const titulo = [{ A: "Reporte de arqueo" }, {}];
  const hora = new Date();
  const infoCreacción = { A: `Fecha De Creación ${hora}` };
  const longitudes = [25, 25, 20, 10, 10, 10, 35];

  const handleDownload = () => {
    const tabla = [
      {
        A: "supervisor",
        B: "nombres",
        C: "nombre supervisor",
        D: "documento",
        E: "ip",
        F: "sucursal",
        G: "puntodeventa",
        H: "ventabruta ",
        I: "baseefectivo ",
        J: "totalingreso ",
        K: "chancesabonados ",
        L: "chancespreimpresos ",
        M: "premiospagados ",
        N: "efectivocajafuerte ",
        O: "totalegresos ",
        P: "totalbilletes ",
        Q: "totalmonedas ",
        R: "totalarqueo ",
        S: "sobrantefaltante: ",
        T: "canti_billete_cienmil ",
        U: "total_billete_cienmil ",
        V: "canti_billete_cincuentamil ",
        W: "total_billete_cincuentamil ",
        y: "canti_billete_veintemil ",
        Z: "total_billete_veintemil ",
        AB: "canti_billete_diezmil",
        AC: "total_billete_diezmil",
        AD: " canti_billete_cincomil ",
        AE: "total_billete_cincomil ",
        AF: "canti_billete_dosmil ",
        AG: "total_billete_dosmil ",
        AH: "canti_billete_mil ",
        AI: "total_billete_mil",
        AJ: "canti_moneda_mil",
        AK: "total_moneda_mil",
        AL: "canti_moneda_quinientos ",
        AM: "total_moneda_quinientos ",
        AN: "canti_moneda_docientos ",
        AO: "total_moneda_docientos ",
        AQ: "canti_moneda_cien",
        AR: "total_moneda_cien",
        AS: "canti_moneda_cincuenta ",
        AT: "total_moneda_ciencuenta ",
        AU: "total_efectivo ",
        AV: "total_premios_pagados",
        AW: "entrega_colocador ",
        AX: "sobrantefaltante_caja ",
        AY: "colocador_cajafuerte",
        AZ: "rollos_bnet ",
        BA: "rollos_fisicos ",
        BB: "diferencia ",
        BC: "nombre_juego ",
        BD: "cantidad_bnet ",
        BE: "cantidad_fisicos ",
        BF: " cantidad_faltante ",
        BG: "cantidad_tiquete ",
        BH: "descargado ",
        BI: "nombre_juego2 ",
        BJ: "cantidad_bnet2 ",
        BK: "cantidad_fisicos2 ",
        BL: "cantidad_faltante2 ",
        BM: "cantidad_tiquete2 ",
        BN: "descargado2 ",
        BO: "nombre_juego3 ",
        BP: "cantidad_bnet3 ",
        BQ: "cantidad_fisicos3 ",
        BR: "cantidad_faltante3 ",
        BS: "cantidad_tiquete3 ",
        BT: "descargado3 ",
        BU: "nombre_juego4 ",
        BV: "cantidad_bnet4 ",
        BW: "cantidad_fisicos4 ",
        BX: "cantidad_faltante4 ",
        BY: "cantidad_tiquete4 ",
        BZ: "descargado4 ",
        CA: "totaldescargados ",
        CB: "totalvalor ",
        CC: "requisito1 ",
        CD: "observacion1",
        CE: "requisito2 ",
        CF: "observacion2",
        CG: "requisito3 ",
        CH: "observacion3 ",
        CI: "requisito4 ",
        CJ: "observacion4 ",
        CK: "requisito5 ",
        CL: "observacion5 ",
        CM: "requisito6 ",
        CN: "observacion6 ",
        CO: "requisito7 ",
        CP: "observacion7 ",
        CQ: "requisito8 ",
        CR: "observacion8 ",
        CS: "requisito9 ",
        CT: "observacion9 ",
        CU: "requisito10 ",
        CV: "observacion10",
        CW: "requisito11 ",
        CX: "observacion11",
        CY: "requisito12 ",
        CZ: "observacion12",
        DA: "requisito13 ",
        DB: "observacion13",
        DC: "requisito14 ",
        DD: "observacion14",
        DE: "requisito15 ",
        DF: "observacion15",
        DG: "requisito16 ",
        DH: "observacion16",
        DI: "requisito17 ",
        DJ: "observacion17",
        DK: "requisito18 ",
        DL: "observacion18",
        DM: "requisito19 ",
        DN: "observacion19",
        DO: "requisito20 ",
        DP: "observacion20",
        DQ: "requisito21 ",
        DR: "observacion21",
        DS: "requisito22 ",
        DT: "observacion22",
        DU: "requisito23 ",
        DV: "observacion23",
        DW: "requisito24 ",
        DX: "observacion24",
        DY: "requisito25 ",
        DZ: "observacion25",
        EA: "requisito26 ",
        EB: "observacion26",
        EC: "requisito27 ",
        ED: "observacion27",
        EE: "requisito28 ",
        EF: "observacion28",
        EG: "requisito29 ",
        EH: "requisito30 ",
        EI: "fechavisita ",
        EJ: "horavisita ",
        EK: "latitud ",
        EL: "longitud ",
      },
    ];

    // eslint-disable-next-line react/prop-types
    tabla.push({
      A: datos.supervisor,
      B: datos.nombres,
      C: datos.nombre_supervisor,
      D: datos.documento,
      E: datos.ip,
      F: datos.sucursal,
      G: datos.puntodeventa,
      H: datos.ventabruta,
      I: datos.baseefectivo,
      J: datos.totalingreso,
      K: datos.chancesabonados,
      L: datos.chancespreimpresos,
      M: datos.premiospagados,
      N: datos.efectivocajafuerte,
      O: datos.totalegresos,
      P: datos.totalbilletes,
      Q: datos.totalmonedas,
      R: datos.totalarqueo,
      S: datos.sobrantefaltante,
      T: datos.canti_billete_cienmil,
      U: datos.total_billete_cienmil,
      V: datos.canti_billete_cincuentamil,
      W: datos.total_billete_cincuentamil,
      y: datos.canti_billete_veintemil,
      Z: datos.total_billete_veintemil,
      AB: datos.canti_billete_diezmil,
      AC: datos.total_billete_diezmil,
      AD: datos.canti_billete_cincomil,
      AE: datos.total_billete_cincomil,
      AF: datos.canti_billete_dosmil,
      AG: datos.total_billete_dosmil,
      AH: datos.canti_billete_mil,
      AI: datos.total_billete_mil,
      AJ: datos.canti_moneda_mil,
      AK: datos.total_moneda_mil,
      AL: datos.canti_moneda_quinientos,
      AM: datos.total_moneda_quinientos,
      AN: datos.canti_moneda_docientos,
      AO: datos.total_moneda_docientos,
      AQ: datos.canti_moneda_cien,
      AR: datos.total_moneda_cien,
      AS: datos.canti_moneda_cincuenta,
      AT: datos.total_moneda_ciencuenta,
      AU: datos.total_efectivo,
      AV: datos.total_premios_pagados,
      AW: datos.entrega_colocador,
      AX: datos.sobrantefaltante_caja,
      AY: datos.colocador_cajafuerte,
      AZ: datos.rollos_bnet,
      BA: datos.rollos_fisicos,
      BB: datos.diferencia,
      BC: datos.nombre_juego,
      BD: datos.cantidad_bnet,
      BE: datos.cantidad_fisicos,
      BF: datos.cantidad_faltante,
      BG: datos.cantidad_tiquete,
      BH: datos.descargado,
      BI: datos.nombre_juego2,
      BJ: datos.cantidad_bnet2,
      BK: datos.cantidad_fisicos2,
      BL: datos.cantidad_faltante2,
      BM: datos.cantidad_tiquete2,
      BN: datos.descargado2,
      BO: datos.nombre_juego3,
      BP: datos.cantidad_bnet3,
      BQ: datos.cantidad_fisicos3,
      BR: datos.cantidad_faltante3,
      BS: datos.cantidad_tiquete3,
      BT: datos.descargado3,
      BU: datos.nombre_juego4,
      BV: datos.cantidad_bnet4,
      BW: datos.cantidad_fisicos4,
      BX: datos.cantidad_faltante4,
      BY: datos.cantidad_tiquete4,
      BZ: datos.descargado4,
      CA: datos.totaldescargados,
      CB: datos.totalvalor,
      CC: datos.requisito1,
      CD: datos.observacion1,
      CE: datos.requisito2,
      CF: datos.observacion2,
      CG: datos.requisito3,
      CH: datos.observacion3,
      CI: datos.requisito4,
      CJ: datos.observacion4,
      CK: datos.requisito5,
      CL: datos.observacion5,
      CM: datos.requisito6,
      CN: datos.observacion6,
      CO: datos.requisito7,
      CP: datos.observacion7,
      CQ: datos.requisito8,
      CR: datos.observacion8,
      CS: datos.requisito9,
      CT: datos.observacion9,
      CU: datos.requisito10,
      CV: datos.observacion10,
      CW: datos.requisito11,
      CX: datos.observacion11,
      CY: datos.requisito12,
      CZ: datos.observacion12,
      DA: datos.requisito13,
      DB: datos.observacion13,
      DC: datos.requisito14,
      DD: datos.observacion14,
      DE: datos.requisito15,
      DF: datos.observacion15,
      DG: datos.requisito16,
      DH: datos.observacion16,
      DI: datos.requisito17,
      DJ: datos.observacion17,
      DK: datos.requisito18,
      DL: datos.observacion18,
      DM: datos.requisito19,
      DN: datos.observacion19,
      DO: datos.requisito20,
      DP: datos.observacion20,
      DQ: datos.requisito21,
      DR: datos.observacion21,
      DS: datos.requisito22,
      DT: datos.observacion22,
      DU: datos.requisito23,
      DV: datos.observacion23,
      DW: datos.requisito24,
      DX: datos.observacion24,
      DY: datos.requisito25,
      DZ: datos.observacion25,
      EA: datos.requisito26,
      EB: datos.observacion26,
      EC: datos.requisito27,
      ED: datos.observacion27,
      EE: datos.requisito28,
      EF: datos.observacion28,
      EG: datos.requisito29,
      EH: datos.requisito30,
      EI: datos.fechavisita,
      EJ: datos.horavisita,
      EK: datos.latitud,
      EL: datos.longitud,
    });

    const dataFinal = [...titulo, infoCreacción, ...tabla];

    setTimeout(() => {
      creandoArchivo(dataFinal);
    }, 1000);
  };

  const creandoArchivo = (dataFinal) => {
    const libro = XLSX.utils.book_new();
    const hoja = XLSX.utils.json_to_sheet(dataFinal, { skipHeader: true });

    hoja["!merges"] = [
      XLSX.utils.decode_range("A1:G1"),
      XLSX.utils.decode_range("A2:G2"),
      XLSX.utils.decode_range("A3:G3"),
    ];

    const simpiedades = [];

    longitudes.forEach((col) => {
      simpiedades.push({ width: col });
    });

    hoja["!cols"] = simpiedades;
    XLSX.utils.book_append_sheet(libro, hoja, "Items");
    XLSX.writeFile(libro, "datos.xlsx");
  };

  return (
    <div className="flex justify-end  -translate-y-3 -translate-x-3 ">
      <button
        type="button"
        onClick={handleDownload}
        className="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-lg "
      >
        Exportar a Excel
      </button>
    </div>
  );
};
